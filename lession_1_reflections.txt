How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
It can save me time, if i try to find a bug, which occures in my edited code and which wasen present in my old code version.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
Pros: 
+ i can make the decision, what should be commited and what would be commited. 
+ i can make shure that every commit contains one logical step -> more readable history

Cons:
- maybe i forget to commit, and a big peace of code will be in one commit

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
The reason, why git commits the whole repository is, that there may be files which are related to eachother.
The reason, why other version-control software save the file seperately is, that the files which are saved are most of the time not related to eachother

How can you use the commands git log and git diff to view the history of files?
Step 1: Go to the directory of the repository with git bash
Step 2: type in git log
Step 3: search the versions of interest
Step 4: git diff commit_id_old commit_id_new